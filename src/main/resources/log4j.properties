#定义LOG输出级别
#log4j.rootLogger = [level],appenderName,appenderName2,...
#level是日志记录的优先级，分为OFF,TRACE,DEBUG,INFO,WARN,ERROR,FATAL,ALL
##Log4j建议只使用四个级别，优先级从低到高分别是DEBUG,INFO,WARN,ERROR
#通过在这里定义的级别，您可以控制到应用程序中相应级别的日志信息的开关
#比如在这里定义了INFO级别，则应用程序中所有DEBUG级别的日志信息将不被打印出来
#appenderName就是指定日志信息输出到哪个地方。可同时指定多个输出目的
log4j.rootLogger=DEBUG,Console,File
#定义日志输出目的地为控制台
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.Target=System.out
#可以灵活地指定日志输出格式，下面一行是指定具体的格式
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=[%c] - %m%n
#文件大小到达指定尺寸的时候产生一个新的文件
#log4j.appender.File=org.apache.log4j.RollingFileAppender
#每天产生一个日志文件
log4j.appender.File=org.apache.log4j.DailyRollingFileAppender

#指定输出目录
log4j.appender.File.File=D:/Logs/ssm.log
#按DatePattern输出到文件
log4j.appender.logDailyFile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.logDailyFile.layout=org.apache.log4j.PatternLayout
log4j.appender.logDailyFile.layout.ConversionPattern=[%-5p][%-22d{yyyy/MM/dd HH:mm:ssS}][%l]%n%m%n
log4j.appender.logDailyFile.Threshold=DEBUG
log4j.appender.logDailyFile.ImmediateFlush=TRUE
log4j.appender.logDailyFile.Append=TRUE
log4j.appender.logDailyFile.DatePattern='.'yyyy-MM-dd-HH-mm'.log'
log4j.appender.logDailyFile.Encoding=UTF-8
#可以灵活地指定布局模式
#log4j.appender.File.layout=org.apache.log4j.PatternLayout
#包含日志产生的时间、线程、类别等等信息
log4j.appender.File.layout=org.apache.log4j.TTCCLayout
log4j.appender.File.layout.ConversionPattern=[%p] [%d{yyyy-MM-dd HH\:mm\:ss}][%c]%m%n
#④指定特定包的输出特定的级别
#log4j.logger.org.springframework=DEBUG
#log4j.logger.org.hibernate=DEBUG
#log4j.logger.org.apache.ibatis=DEBUG
#log4j.logger.com.alibaba=DEBUG